plugins {
    alias(libs.plugins.androidApplication)
    id 'jacoco'
    id "org.sonarqube" version "4.4.1.3373"
}

android {
    namespace 'com.group2.catan_android'
    compileSdk 34

    defaultConfig {
        applicationId "com.group2.catan_android"
        minSdk 29
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        buildTypes.each {
            it.buildConfigField('String', 'BASE_URL', '"https://10.0.2.2:8080/catan"')
            it.buildConfigField('String', 'SOCKET_URL', '"ws://10.0.2.2:8080/catan"')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    testOptions{
        unitTests.all{
            useJUnitPlatform()
            finalizedBy jacocoTestReport
        }
    }
}



tasks.register('jacocoTestReport', JacocoReport) {
    dependsOn 'testDebugUnitTest'

    reports {
        xml.required = true
        xml.destination file("${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml")
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${project.layout.buildDirectory.get().asFile}/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = files("${project.layout.buildDirectory.get().asFile}/jacoco/testDebugUnitTest.exec")
}

sonar {
    properties {
        property "sonar.projectKey", "SE-II-group2_catan-android"
        property "sonar.organization", "se-ii-group2"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
    }
}

dependencies {
    testImplementation libs.robolectric.v451
    implementation "androidx.fragment:fragment:1.6.2"
    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation libs.fragment.testing
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    implementation libs.okhttp
    testImplementation libs.junit.jupiter.api
    testRuntimeOnly libs.junit.jupiter.engine
    implementation libs.stomp
    implementation libs.reactivex
    implementation libs.rxandroid
    testImplementation 'org.mockito:mockito-core:3.12.4'
    implementation libs.retrofit
    implementation libs.retrofit.jackson
    implementation libs.retrofit.rxandroid
    implementation libs.lifecycle
}